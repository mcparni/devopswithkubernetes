Exercises 

1.01:

Dockerfile:

FROM alpine:3.13
WORKDIR /usr/src/app
COPY script.sh /usr/src/app/script.sh
RUN chmod +x /usr/src/app/script.sh && apk add util-linux moreutils 
CMD sh /usr/src/app/script.sh

script.sh:
#!/bin/bash
uuid=$(uuidgen)
echo $uuid | ts '[%Y-%m-%d %H:%M:%.S]' 
while sleep 5; do echo $uuid | ts '[%Y-%m-%d %H:%M:%.S]'; done

commands:
docker build . -t logoutput
docker tag logoutput mcprn/logoutput
docker push mcprn/logoutput:latest

kubectl create deployment logoutput-dep --image=mcprn/logoutput 

kubectl logs -f logoutput-dep-79c84dfbf4-d85mn 


outputs:
...
[2021-11-16 20:30:04.314763] e24bd8af-41d2-4948-85d5-aa88d2a0780e
[2021-11-16 20:30:09.379689] e24bd8af-41d2-4948-85d5-aa88d2a0780e
[2021-11-16 20:30:14.448124] e24bd8af-41d2-4948-85d5-aa88d2a0780e
...

1.02:
Dockerfile:

FROM alpine:3.13
WORKDIR /usr/src/app
COPY index.js .
COPY package.json .
RUN apk add --update nodejs && apk add --update npm && npm install 
CMD node index.js

index.js:

const express = require('express')
const app = express()
const port = 3000

app.get('/', (req, res) => {
  res.send('')
})

app.listen(port, () => {
  console.log(`Server started in port ${port}`)
})

package.json:

{
  "name": "project",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "express": "^4.17.1"
  }
}

commands:
docker build . -t project
docker tag project mcprn/project
docker push mcprn/project:latest
kubectl create deployment project-dep --image=mcprn/project


1.03:

deployment.yaml:

apiVersion: apps/v1
kind: Deployment
metadata:
  name: logoutput-dep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logoutput
  template:
    metadata:
      labels:
        app: logoutput
    spec:
      containers:
        - name: logoutput
          image: mcprn/logoutput:latest

1.04:

deployment.yaml:

apiVersion: apps/v1
kind: Deployment
metadata:
  name: project-dep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: project
  template:
    metadata:
      labels:
        app: project
    spec:
      containers:
        - name: project
          image: mcprn/project:latest


